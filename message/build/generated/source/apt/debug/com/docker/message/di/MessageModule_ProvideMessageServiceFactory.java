// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.docker.message.di;

import com.docker.message.api.MessageService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class MessageModule_ProvideMessageServiceFactory implements Factory<MessageService> {
  private final MessageModule module;

  private final Provider<Retrofit> retrofitProvider;

  public MessageModule_ProvideMessageServiceFactory(
      MessageModule module, Provider<Retrofit> retrofitProvider) {
    assert module != null;
    this.module = module;
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MessageService get() {
    return Preconditions.checkNotNull(
        module.provideMessageService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<MessageService> create(
      MessageModule module, Provider<Retrofit> retrofitProvider) {
    return new MessageModule_ProvideMessageServiceFactory(module, retrofitProvider);
  }

  /** Proxies {@link MessageModule#provideMessageService(Retrofit)}. */
  public static MessageService proxyProvideMessageService(
      MessageModule instance, Retrofit retrofit) {
    return instance.provideMessageService(retrofit);
  }
}
