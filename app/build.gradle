apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64','armeabi','armeabi-v8a',
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME      : rootProject.ext.android.applicationId,
                JPUSH_APPKEY       : rootProject.ext.push.JPUSH_APPKEY,
                JPUSH_CHANNEL      : rootProject.ext.push.JPUSH_CHANNEL
        ]

    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main {
            if (IsBuildMudle.toBoolean()) {
                java.srcDirs += "src/main/debug/java/";
            } else {
                java.srcDirs += "src/main/release/java/";
            }
            jniLibs.srcDirs = ['libs']
        }
    }
    signingConfigs {
        release {
            storeFile file("keystore.jks")//签名文件的path
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
//    repositories {
//        flatDir {
//            dirs 'libs', '../opensource/libs'
//        }
//    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'jsr305'
    })
    testImplementation rootProject.ext.dependencies["junit"]
    implementation rootProject.ext.dependencies["appcompat"]
    annotationProcessor rootProject.ext.dependencies["constraint-layout"]
    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-compiler"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api project(':lib_common')
    api project(":circle")
    api project(":account")
    api project(":videobasic")
}
